kind: Deployment
apiVersion: apps/v1
metadata:
  name: devops-apiserver
  namespace: kubesphere-devops-system
  labels:
    app.kubernetes.io/instance: devops
    app.kubernetes.io/name: ks-devops
    devops.kubesphere.io/component: apiserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: devops
      app.kubernetes.io/name: ks-devops
      devops.kubesphere.io/component: apiserver
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: devops
        app.kubernetes.io/name: ks-devops
        devops.kubesphere.io/component: apiserver
    spec:
      volumes:
        - name: kubesphere-config
          configMap:
            name: devops-config
            defaultMode: 420
      initContainers:
        #        - name: migrate-config
        #          image: 'ghcr.io/kubesphere/devops-tools:v3.3.0-rc.0'
        #          command:
        #            - ks
        #            - option
        #            - migrate
        #            - '--service'
        #            - 'devops-apiserver.kubesphere-devops-system:9090'
        #            - '--namespace'
        #            - kubesphere-devops-system
        #          resources: {}
        #          terminationMessagePath: /dev/termination-log
        #          terminationMessagePolicy: File
        #          imagePullPolicy: Always
        - name: init-config
          image: 'ghcr.io/kubesphere/devops-tools:v3.3.0-rc.0'
          command:
            - /jwt
            - '--output'
            - configmap
            - '--namespace'
            - kubesphere-devops-system
            - '--name'
            - ks-devops-devops-config
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      containers:
        - name: ks-devops
          image: 'ghcr.io/kubesphere/devops-apiserver:v3.3.0-rc.0'
          args:
            - '--argocd-namespace=argocd'
          ports:
            - containerPort: 9090
              protocol: TCP
          resources: {}
          volumeMounts:
            - name: kubesphere-config
              mountPath: /etc/kubesphere/
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
          securityContext: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
  #      serviceAccountName: devops
  #      serviceAccount: devops
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
